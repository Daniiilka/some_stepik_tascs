"""–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ nn. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç
–ø–æ—Å—Ç—Ä–æ—á–Ω–æ —Å–ø–∏—Å–æ–∫, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ nn —Å–ø–∏—Å–∫–æ–≤ [[1, 2, ..., n], [1, 2, ..., n], ..., [1, 2, ..., n]]."""

# n = int(input())
# result = [[int(i) for i in range(1, n+1)] for _ in range(n)]
# [print(i) for i in result]

"""–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ nn. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
–≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ nn —Å–ø–∏—Å–∫–æ–≤ [[1], [1, 2], [1, 2, 3], ..., [1, 2, ..., n]]."""
# result = []
# n = int(input())
# for i in range(1, n + 1):
#     result.append(list(range(1, i + 1)))
#
# print(*result, sep='\n')

"""–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –ü–∞—Å–∫–∞–ª—è ‚Äî –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –±–∏–Ω–æ–º–∏–∞–ª—å–Ω—ã—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤, –∏–º–µ—é—â–∞—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω—É—é —Ñ–æ—Ä–º—É.
–í —ç—Ç–æ–º —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–µ –Ω–∞ –≤–µ—Ä—à–∏–Ω–µ –∏ –ø–æ –±–æ–∫–∞–º —Å—Ç–æ—è—Ç –µ–¥–∏–Ω–∏—Ü—ã. –ö–∞–∂–¥–æ–µ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ —Å—É–º–º–µ –¥–≤—É—Ö —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∞–¥ –Ω–∏–º —á–∏—Å–µ–ª.

0:      1
1:     1 1
2:    1 2 1
3:   1 3 3 1
4:  1 4 6 4 1
      .....
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ nn. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞
–ü–∞—Å–∫–∞–ª—è –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ (–Ω—É–º–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–æ–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –Ω—É–ª—è)."""


# def pascal(rows):
#     result = []
#     for i in range(rows + 1):
#         temp_list = []
#         for j in range(i + 1):
#             if j == 0 or j == i:
#                 temp_list.append(1)
#             else:
#                 temp_list.append(result[i - 1][j - 1] + result[i - 1][j])
#         result.append(temp_list)
#     return result[-1]


# print(pascal(int(input())))

"""–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é get_month(language, number), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–≤–∞
–∞—Ä–≥—É–º–µ–Ω—Ç–∞ language ‚Äì —è–∑—ã–∫ ru –∏–ª–∏ en –∏ number ‚Äì –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ (–æ—Ç 1 –¥–æ 12)
–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ."""

# # –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
# def get_month(language, number):
#     ru = ['—è–Ω–≤–∞—Ä—å', '—Ñ–µ–≤—Ä–∞–ª—å', '–º–∞—Ä—Ç', '–∞–ø—Ä–µ–ª—å', '–º–∞–π', '–∏—é–Ω—å', '–∏—é–ª—å', '–∞–≤–≥—É—Å—Ç',
#               '—Å–µ–Ω—Ç—è–±—Ä—å', '–æ–∫—Ç—è–±—Ä—å', '–Ω–æ—è–±—Ä—å','–¥–µ–∫–∞–±—Ä—å']
#
#     en = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august',
#               'september', 'october', 'november', 'december']
#     if language == 'ru':
#         return ru[number - 1]
#     else:
#         return en[number - 1]
#
# # —Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
# lan = input()
# num = int(input())
#
# # –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
# print(get_month(lan, num))

"""–ë–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª. –ò–∑ –Ω–µ—ë —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª.
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–∏—Å–µ–ª, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–º –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ —á–∏—Å–ª–∞,
—Ç–æ –µ—Å—Ç—å, —Å—Ç–æ—è—Ç –≤—Å–ª–µ–¥ –∑–∞ –º–µ–Ω—å—à–∏–º —á–∏—Å–ª–æ–º. """
#
#
# nums = [int(i) for i in input().split()]
#
# count = 0
# for i in range(1, len(nums)):
#     if nums[i] > nums[i - 1]:
#         count += 1
# print(count)


"""–ù–∞–∑–∞–¥, –≤–ø–µ—Ä—ë–¥ –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª. –ò–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–æ–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª.
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è–µ—Ç –º–µ—Å—Ç–∞–º–∏ —Å–æ—Å–µ–¥–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ (a[0] c a[1], a[2] c a[3] –∏ —Ç.–¥.).
–ï—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—á–µ—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ —Å–≤–æ–µ–º –º–µ—Å—Ç–µ."""

# nums = [int(i) for i in input().split()]
# for i in range(0, len(nums) - 1, 2):
#     nums[i], nums[i + 1] = nums[i + 1], nums[i]
# print(*nums)


"""–°–¥–≤–∏–≥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª. –ò–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–æ–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è
—Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ —Å–¥–≤–∏–≥–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ –Ω–∞–ø—Ä–∞–≤–æ, –∫–æ–≥–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø–µ—Ä–≤—ã–º, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–¥–≤–∏–≥–∞—é—Ç—Å—è –Ω–∞ –æ–¥–Ω—É –ø–æ–∑–∏—Ü–∏—é –≤–ø–µ—Ä–µ–¥, –≤ —Å—Ç–æ—Ä–æ–Ω—É —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤."""
# nums = [int(i) for i in input().split()]
# result = [nums[-1]]
# for i in range(len(nums) - 1):
#     result.append(nums[i])
# print(*result)

"""–†–∞–∑–ª–∏—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–µ –ø–æ –Ω–µ—É–±—ã–≤–∞–Ω–∏—é.
–ò–∑ —Å—Ç—Ä–æ–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∞–∑–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ."""

# nums = [int(i) for i in input().split()]
# print(len(set(nums)))


"""–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —á–∏—Å–µ–ª
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –¥–≤—É—Ö —á–∏—Å–µ–ª –∏–∑ –¥–∞–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞,
–≤—ã–≤–æ–¥—è—â—É—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–µ –æ—Ç–≤–µ—Ç–∞ ¬´–î–ê¬ª –∏–ª–∏ ¬´–ù–ï–¢¬ª."""

# from itertools import combinations
#
# nums = [int(input()) for i in range(int(input()))]
# check_num = int(input())
# flag = False
# for i in combinations(nums, 2):
#     num = i[0] * i[1]
#     if num == check_num:
#         flag = True
#         break
# print('–î–ê' if flag == True else '–ù–ï–¢')

"""–û—Ä–µ–ª –∏ —Ä–µ—à–∫–∞
–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ –±—É–∫–≤ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ "–û" –∏ "–†". –ë—É–∫–≤–∞ "–û" ‚Äì —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã–ø–∞–¥–µ–Ω–∏—é –û—Ä–ª–∞,
–∞ –±—É–∫–≤–∞ "–†" ‚Äì —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã–ø–∞–¥–µ–Ω–∏—é –†–µ—à–∫–∏. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
–ø–æ–¥—Ä—è–¥ –≤—ã–ø–∞–≤—à–∏—Ö –†–µ—à–µ–∫."""

# s = sorted([i for i in input().split('–û')])
# print(len(s[-1]))

"""–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, —Ä–µ–∞–ª–∏–∑—É—é—â—É—é –∞–ª–≥–æ—Ä–∏—Ç–º –Ω–∞–ø–∏—Å–∞–Ω–∏—è —ç—Ç–æ–π –ø–µ—Å–Ω–∏. –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Ü–µ
–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â—É—é –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –±—É–∫–≤—É, –µ—Å–ª–∏ –æ–Ω–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤ —Å—Ç—Ä–æ–∫–µ —Ç–µ–∫—Å—Ç–∞, –∞ –æ—á–µ—Ä–µ–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É
–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —É–∂–µ –±–µ–∑ —ç—Ç–æ–π –±—É–∫–≤—ã."""
# string = f'{input()} –∑–∞–ø—Ä–µ—Ç–∏–ª –±—É–∫–≤—É '

# abc_list = [chr(i) for i in range(ord('–∞'), ord('—è') + 1)]
# for i in abc_list:
#     if i in string:
#         print(string + i)
#         string = string.replace(i, '').replace('  ', ' ').lstrip()

"""–î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª for –∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é max(), —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–æ–¥–∏–ª –æ–¥–∏–Ω –æ–±—â–∏–π
–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤ list1."""

# list1 = [[1, 7, 8], [9, 7, 102], [6, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
# maximum = -1
# for block in list1:
#     if max(block) >= maximum:
#         maximum = max(block)
# print(maximum)

"""–î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã —Å–ø–∏—Å–æ–∫ list1 –∏–º–µ–ª –≤–∏–¥:

list1 = [[8, 7, 1], [102, 7, 9], [105, 106, 102], [103, 98, 99, 100], [3, 2, 1]]"""

# list1 = [[1, 7, 8], [9, 7, 102], [102, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
#
# for el in list1:
#     el.reverse()
# print(list1)

"""–î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–æ–¥–∏–ª –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ: —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª
—Å–ø–∏—Å–∫–∞ list1 —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—É—é –Ω–∞ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —á–∏—Å–µ–ª."""

# list1 = [[1, 7, 8], [9, 7, 102], [102, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
# total = 0
# counter = 0
# for block in list1:
#     for el in block:
#         total += el
#         counter += 1
# result = total/counter
# print(result)

"""–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –ü–∞—Å–∫–∞–ª—è 1 üå∂Ô∏è
–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –ü–∞—Å–∫–∞–ª—è ‚Äî –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –±–∏–Ω–æ–º–∏–∞–ª—å–Ω—ã—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤, –∏–º–µ—é—â–∞—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω—É—é —Ñ–æ—Ä–º—É.
–í —ç—Ç–æ–º —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–µ –Ω–∞ –≤–µ—Ä—à–∏–Ω–µ –∏ –ø–æ –±–æ–∫–∞–º —Å—Ç–æ—è—Ç –µ–¥–∏–Ω–∏—Ü—ã. –ö–∞–∂–¥–æ–µ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ —Å—É–º–º–µ –¥–≤—É—Ö —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∞–¥ –Ω–∏–º —á–∏—Å–µ–ª.

0:      1
1:     1 1
2:    1 2 1
3:   1 3 3 1
4:  1 4 6 4 1
      .....
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ nn. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞
–ü–∞—Å–∫–∞–ª—è –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ (–Ω—É–º–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–æ–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –Ω—É–ª—è)."""

# def pascal(rows):
#     result = []
#     for i in range(rows + 1):
#         temp_list = []
#         for j in range(i + 1):
#             if j == 0 or j == i:
#                 temp_list.append(1)
#             else:
#                 temp_list.append(result[i - 1][j - 1] + result[i - 1][j])
#         result.append(temp_list)
#     for el in range(rows ):
#         print(*result[el])


# pascal(int(input()))

"""–£–ø–∞–∫–æ–≤–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ üå∂Ô∏è
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å–∏–º–≤–æ–ª—ã. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —É–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç
 –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∑–∞–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –ø–æ–¥—Å–ø–∏—Å–∫–∏."""

# symbols = input().split()
# result = [[symbols[0]]]
# for i in range(1, len(symbols)):
#     if symbols[i] == symbols[i - 1]:
#         result[-1].append(symbols[i])
#     else:
#         result.append([symbols[i]])
# print(result)

"""–†–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ —á–∞–Ω–∫–∏ üå∂Ô∏è
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–µ —Å—Ç—Ä–æ–∫–∏, –Ω–∞ –æ–¥–Ω–æ–π —Å–∏–º–≤–æ–ª—ã, –Ω–∞ –¥—Ä—É–≥–æ–π —á–∏—Å–ª–æ nn. –ò–∑ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫.

–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é chunked(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å–ø–∏—Å–æ–∫ –∏ —á–∏—Å–ª–æ, –∑–∞–¥–∞—é—â–µ–µ —Ä–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞ (–∫—É—Å–∫–∞), –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
—Å–ø–∏—Å–æ–∫ –∏–∑ —á–∞–Ω–∫–æ–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã."""

# def chunked(symbols, chunk):
#     res = []
#     for i in range(0, len(symbols), chunk):
#         res.append(symbols[:chunk])
#         del symbols[:chunk]
#     return res
#
#
# symbols = input().split()
# print(chunked(symbols, int(input())))

"""–î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–µ–ª —Å–ø–∏—Å–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å—Ä–µ–¥–Ω–∏–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —á–∏—Å–µ–ª –∫–∞–∂–¥–æ–≥–æ
–≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä—Ç–µ–∂–∞ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –∫–æ—Ä—Ç–µ–∂–µ –∫–æ—Ä—Ç–µ–∂–µ–π numbers."""
numbers = ((10, 10, 10, 12), (30, 45, 56, 45), (81, 80, 39, 32), (1, 2, 3, 4), (90, 10))
result = []
for el in numbers:
    result.append(sum(list(el)) / len(el))
print(result)
