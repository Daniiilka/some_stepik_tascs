"""Ученики 1010 класса онлайн-школы BEEGEEK получили задание прочесть на летних каникулах три книги:

"Что такое математика?";
"Математическая составляющая";
"100 гениальных идей по математике".
Оказалось, что nn учеников прочитали первую книгу, mm учеников — вторую, kk учеников — третью. Также известно, что xx
учеников прочли первую или вторую, или обе эти книги, yy учеников — вторую или третью, или обе, zz учеников — первую
и третью, или хотя бы одну из этих двух книг. Полностью выполнили задание только tt учеников. Всего в 1010 классе
учится aa учеников. Напишите программу, которая выводит сколько учеников:

прочитали только одну книгу;
прочитали две книги;
не прочитали ни одной из рекомендованных книг."""
# n, m, k, x, y, z, t, a = int(input()), int(input()), int(input()), int(input()), int(input()), \
#                          int(input()), int(input()), int(input())
# x5 = t
# x2 = m + n - x - t
# x4 = m + k - z - t
# x6 = n + k - y - t
# x1 = n - x2 - x4 - x5
# x3 = m - x2 - x5 - x6
# x7 = k - x4 - x5 - x6
# print(x1+x3+x7)
# print(x2+x4+x6)
# print(a-x1-x2-x3-x4-x5-x6-x7)

"""Уникальные символы 1
Напишите программу для вывода количества уникальных символов каждого считанного слова без учета регистра."""
# n = int(input())
# words = list({i for i in input().lower()} for _ in range(n)) # set generator turned into nested list
# [print(len(el)) for el in words]


"""Уникальные символы 2
Напишите программу для вывода общего количества уникальных символов во всех считанных словах без учета регистра."""
# result = set()
# for _ in range(int(input())):
#     result.update(input().lower())
# print(len(result))

"""Количество слов в тексте
Напишите программу для определения общего количества различных слов в строке текста."""
# words = set([i.lower().strip('.,;:-?!') for i in input().split()])
# print(len(words))


"""Встречалось ли число раньше?
На вход программе подается строка текста, содержащая числа. Для каждого числа выведите слово
YES (в отдельной строке), если это число ранее встречалось в последовательности или NO, если не встречалось"""

# num_set = set()
# for num in input().split():
#     if int(num) not in num_set:
#         num_set.add(int(num))
#         print('NO')
#     else:
#         print('YES')

"""Количество совпадающих
На вход программе подаются две строки текста, содержащие числа. Напишите программу, которая определяет
количество чисел, которые есть как в первой строке, так и во второй."""
# set1, set2 = [{int(i) for i in input().split()} for _ in range(2)]
# print(*sorted(set1 & set2))

"""Числа первой строки
На вход программе подаются две строки текста, содержащие числа. Напишите программу, которая выводит все числа
в порядке возрастания, которые есть в первой строке, но отсутствуют во второй."""
# set1, set2 = [{int(i) for i in input().split()} for _ in range(2)]
# print(*sorted(set1 - set2))

"""Общие цифры
На вход программе подается натуральное число nn, а затем nn различных натуральных чисел, каждое на отдельной
строке. Напишите программу, которая выводит все общие цифры в порядке возрастания у всех введенных чисел."""
# n = int(input())
#
# nums = [{str(i) for i in input()} for _ in range(n)]
# for idx in range(1, n):
#     nums[0].intersection_update(nums[idx])
# print(*sorted(nums[0]))

"""Урок математики
Даны по 1010-балльной шкале оценки по математике трех учеников. Напишите программу, которая выводит
множество оценок, имеющихся у учеников, которые встречаются не более, чем у двух из указанных учеников."""
# s1, s2, s3 = [{int(i) for i in input().split()} for _ in range(3)]
# union_set = s1 | s2 | s3
# intersection_set = s1 & s2 & s3
# result = union_set.difference(intersection_set)
# print(*sorted(result))

"""Урок математики
Даны по 1010-балльной шкале оценки по математике трех учеников. Напишите программу, которая выводит множество оценок,
имеющихся у учеников, которые встречаются не более, чем у двух из указанных учеников."""
# s1, s2, s3 = [{int(i) for i in input().split()} for _ in range(3)]
# result = s3 - (s1 | s2)
# print(*sorted(result, reverse=True))

"""Урок биологии
Даны по 1010-балльной шкале оценки по биологии трех учеников. Напишите программу, которая выводит множество оценок,
не встречающихся ни у одного из трех учеников."""
# s1, s2, s3 = [{int(i) for i in input().split()} for _ in range(3)]
# all_nums = set(range(11))
# result = all_nums - (s1 | s2 | s3)
# print(*sorted(result))

"""Используя генератор множеств, дополните приведенный код, так чтобы получить множество,
содержащее уникальные слова (в нижнем регистре) строки sentence. Результат вывести на одной строке в
алфавитном порядке, разделяя элементы одним символом пробела."""

# sentence = '''My very photogenic mother died in a freak accident (picnic, lightning) when I was three, and,
# save for a pocket of warmth in the darkest past, nothing of her subsists within the hollows and dells of memory,
# over which, if you can still stand my style (I am writing under observation), the sun of my infancy had set: surely,
# you all know those redolent remnants of day suspended, with the midges, about some hedge in bloom or suddenly entered
# and traversed by the rambler, at the bottom of a hill, in the summer dusk; a furry warmth, golden midges.'''

# result_set = {word.lower().strip(':,.!?();') for word in sentence.split() if len(word.strip(':,.!?();')) < 4}
# print(*sorted(result_set))

"""Используя генератор множеств, дополните приведенный код, так чтобы он выбрал из списка files уникальные имена
файлов c расширением .png, независимо от регистра имен и расширений. Имена файлов вывести вместе с расширением,
все на одной строке, в нижнем регистре, в алфавитном порядке через пробел."""
#
# files = ['python.png', 'qwerty.py', 'Python.PNg', 'apple.pnG', 'zebra.PNG',  'solution.Py', 'stepik.org',
#          'kotlin.ko', 'github.git', 'ZeBrA.PnG']
# result = {word.lower() for word in files if word.lower().endswith('.png')}
# print(*sorted(result))

"""Домашнее задание
Учитель проверяет домашнее задание в классе и получил следующие ответы: из nn школьников у mm домашнее задание съела
собака, у kk отключили свет, а pp учеников постигли оба несчастья. Напишите программу, которая определяет сколько
человек выполнило домашнее задание."""

# n, m, k, p = [int(input()) for i in range(4)]
# result = n - ((m - p) + (k - p) + p)
# print(result)

"""Восход
На спутнике «Восход» установлен прибор для измерения солнечной активности. Каждую минуту он передаёт в обсерваторию по
каналу связи положительное целое число — количество энергии солнечного излучения. Для правильного анализа результатов
нет необходимости держать повторяющиеся данные. Напишите программу, которая выводит максимальное количество показаний
спутника, при удалении которых результат будет правильно проанализирован."""
#
# sunrise_data = [i for i in input().split()]
# sunrise_useful_data = set(sunrise_data)
# print(len(sunrise_data) - len(sunrise_useful_data))

"""Города
Тимур и Руслан играют в игру города. Они очень любят эту игру и знают много городов, особенно Тимур, однако к
концу игры ввиду своего возраста забывают, какие города уже называли.

Напишите программу, считывающую информацию об игре и сообщающую ребятам, что очередной город назван повторно."""

# cities = {input() for _ in range(int(input()))}
# next_city = input()
# print('OK' if next_city not in cities else 'REPEAT')

"""Книги на прочтение
Руслан получил в конце учебного года список литературы на лето. Теперь ему надо выяснить, какие книги из этого
списка у него есть. У Руслана на компьютере в текстовом файле записаны все книги из его домашней библиотеки в
случайном порядке.

Напишите программу, определяющую для каждой книги из списка на прочтение, есть она у Руслана или нет."""

# in_library, need_to_read = int(input()), int(input())
# library = set(input() for _ in range(in_library))
# to_read = list(input() for _ in range(need_to_read))
# [print('YES' if to_read[i] in library else 'NO') for i in range(need_to_read)]

"""Странное увлечение
Как известно, математики странные люди. Не составляет исключения и Тимур — автор данного курса. Каждый день
Тимур решает ровно две сложные математические задачи. Решая первую задачу, он записывает на первом листочке все
числа, которые в ней встречаются. Далее он делает паузу и берется за вторую задачу. Затем записывает на втором
листочке все числа, которые в ней встречаются. После этого он берет еще один листок и выписывает на него
все совпадающие числа из первых двух листочков. Если такие числа есть, день удался, если общих чисел нет,
Тимур считает день неудачным.

Напишите программу, которая находит общие числа двух листочков или сообщает, что день не удался 😏"""
# nums_of_bad_day = [{int(i) for i in input().split()} for _ in range(2)]
# intersection_of_nums = sorted(nums_of_bad_day[0] & nums_of_bad_day[1], reverse=True)
# print(*intersection_of_nums if len(intersection_of_nums) > 0 else ('BAD DAY', ))

"""Онлайн-школа BEEGEEK 1
При приёме новых сотрудников в онлайн-школу BEEGEEK её руководитель тестирует не только профессиональные качества
кандидата, но и его память.

Кандидату показывают ненадолго несколько различных чисел, а затем кандидат должен их назвать. Причем неважно,
в каком порядке он их вспоминает, и повторяется он или нет, главное он должен назвать все числа, не добавляя лишних.

Напишите программу, определяющую, успешно ли прошел кандидат тестирование памяти."""

# nums_for_test = [{int(i) for i in input().split()} for _ in range(2)]
# print('YES' if nums_for_test[1] == nums_for_test[0] else 'NO')

"""Онлайн-школа BEEGEEK 2
Каждый ученик, обучающийся в онлайн-школе BEEGEEK изучает либо математику, либо информатику, либо оба эти предмета.
У руководителя школы есть списки изучающих каждый предмет.

Напишите программу, позволяющую руководителю выяснить, сколько учеников изучает только математику."""

# m, n = int(input()), int(input())
# math = {input() for _ in range(m)}
# inf = {input() for _ in range(n)}
# print(len(math - inf))


"""Онлайн-школа BEEGEEK 3
Каждый ученик, обучающийся в онлайн-школе BEEGEEK изучает либо математику, либо информатику, либо оба этих предмета.
У руководителя школы есть списки изучающих каждый предмет.

Напишите программу, позволяющую руководителю выяснить, сколько учеников изучает только один предмет."""

# m, n = int(input()), int(input())
# math = {input() for _ in range(m)}
# inf = {input() for _ in range(n)}
# print(len(math ^ inf) if len(math ^ inf) > 0 else 'NO')

"""Онлайн-школа BEEGEEK 4
Руководитель онлайн-школы BEEGEEK и его помощник составили списки учеников их школы.

Напишите программу, которая выведет все фамилии учеников, которые вспомнили руководитель и его помощник."""

# students = [{i for i in input().split()} for _ in range(2)]
# print(*sorted(students[0] | students[1]))

"""Онлайн-школа BEEGEEK 5 🌶️
Каждый ученик, обучающийся в онлайн-школе BEEGEEK изучает либо математику, либо информатику, либо оба этих
предмета. У руководителя школы есть списки учеников, изучающих каждый предмет. Случайно списки всех учеников
перемешались.

Напишите программу, которая позволит руководителю выяснить, сколько учеников изучает только один предмет."""

# m, n = int(input()), int(input())
# math = set()
# inf = set()
# for i in range(n + m):
#     student = input()
#     if student in math:
#         math.remove(student)
#         inf.add(student)
#     else:
#         math.add(student)
#
# print(len(math) if len(math) > 0 else 'NO')

"""Онлайн-школа BEEGEEK 6 🌶️
Руководителю онлайн-школы BEEGEEK захотелось узнать, кто из его учеников присутствовал на всех уроках с начала
учебного года. Для каждого урока есть листок со списком присутствовавших учеников.

Напишите программу, определяющую фамилии учеников, которые присутствовали на всех уроках."""

# lessons = int(input())
# students_on_lesson = [{input() for _ in range(int(input()))} for _ in range(lessons)]
# for idx in range(1, lessons):
#     students_on_lesson[0].intersection_update(students_on_lesson[idx])
# print(*sorted(students_on_lesson[0]), sep='\n')
